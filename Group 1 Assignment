#Programming for Data Analytics Group Project
#Date: March 22, 2025
#Group Members: Terence Tucker - 2405308, Marcel Manning - 2002905, Candeece Garrick - 2409063, Norman Ranger - 2405961

import random
import pygame
import sys
import statistics

name = str(input("Please enter your name: "))

#List created to store the values of the scores for the various games

ngscore = [0]
wsscore = [0]
drscore = [0]
pyscore = [0]

#Keeps track of the current score of the player for Number Guess and displays it. 
def cur_ngscore_track():
    return ngscore[-1]

#Returns the first value of score for Number Guess.
def cur_ngscore_add():
    return ngscore[0]

#Keeps track of the current score of the player for pygame and displays it. 
def cur_pyscore_track():
    return pyscore[-1]

#Returns the first value of score for pygame.
def cur_pyscore_add():
    return pyscore[0]

#Keeps track of the current score of the player for dice roller challenge and displays it. 
def cur_drscore_track():
    return drscore[-1]

#Returns the first value of score for dice roller challenge.
def cur_drscore_add():
    return drscore[0]

#Keeps track of the current score of the player for Word Scramble and displays it. 
def cur_wsscore_track():
    return wsscore[-1]

#Returns the first value of score for Word Scramble.
def cur_wsscore_add():
    return wsscore[0]

#Finds the sum of all the scores for the various games and returns it.
def overall_score():
    oscore = sum(ngscore) + sum(wsscore) + sum(drscore)
    return oscore

#Finds the average of all the 
def avg_score():
    oscore = sum(ngscore) + sum(wsscore)
    ascore = statistics.mean([sum(ngscore), sum(wsscore)], sum(drscore))
    return ascore


#Number_Guess - Marcel Manning 
def Number_Guess():
    
    print("Welcome to Number Guess! Please see the instructions of the game below\n")
    print("This game will give you 7 tries to guess one of 4 numbers between 1 and 20")
    print("You get 5 points for each correct answer but only need a minimum of 5 to win this game")
      
    rnumlist = []
    try:
        for i in range(4):
            rnum = random.randint(2,21)
            rnumlist.append(rnum)
        
        count = 7
        ngscore.append(cur_ngscore_add() + 0)
        while (count != 0):
            gnum = int(input("\nPlease enter your guess as to what the number is: "))
            for i in rnumlist:
                if (gnum == rnum):
                    ngscore.append(cur_ngscore_add()+ 5)
                    print("\nCongrautlations!", name, "You have successfully guessed the number and gained a score of", cur_ngscore_track())
                    break
                else:
                    print("\nYour current score is:",cur_ngscore_track())
                    break
            count -= 1
            print("You have", count, "tries left")
            
        if (cur_ngscore_track() >=5):
            print("\nYou have won the game with",cur_ngscore_track(),"points",name,"!")
        else:
            print("\nUnfortunately you did not manage to win the game. \nBetter Luck Next Time",name,"!")
            
        choice = str(input("\nWould you like to continue playing this game or return to the main menu?\nType 'y' to continue or press Enter to return:")).lower()
        if (choice == 'y'):
            print("________________________________________________________")
            Number_Guess()
        else:
            print("\nYour current overall score is", overall_score(), name)
            #print(score)
            main_menu()
    except ValueError:
        print("________________________________________________________")
        print("You have entered an invalid value, only numbers are accepted.Please try again")
        print("________________________________________________________")
        Number_Guess()
    except:
        print("________________________________________________________")
        print("Something went wrong.Please try again")
        print("________________________________________________________")
        Number_Guess()
    
#dice_roller_challenge - Candeece Garrick
def dice_roller_challenge():
    print("\nWelcome to Dice Roller Challenge!")
    print("Instructions:")
    print("Roll two dice to reach a score of 80 or more.")
    print("Be careful – if you roll double 1s, your total score resets to 0 and the game ends!")
    print("Try to reach the target in as few rounds as possible.\n")
    target_score = 80
    drscore.append(cur_drscore_add() + 0)
    rounds = 0
    rolls = []
    try:
        while sum(rolls) < target_score:
            input("Press Enter to roll the dice...")
            die1 = random.randint(1, 6)
            die2 = random.randint(1, 6)
            total = die1 + die2
            print(f"You rolled: {die1} and {die2} (Total: {total})")
            rolls.append(total)
            rounds += 1
            sum(rolls)
            if die1 == 1 and die2 == 1:
                print("________________________________________________________")
                print("Oh no! You rolled double 1s! Your score resets to 0. Game over",name,"\n.")
                for i in range(rounds):
                    rolls.pop()
                choice = str(input("\nWould you like to continue playing this game or return to the main menu?\nType 'y' to continue or press Enter to return:")).lower()
                if (choice == 'y'):
                    print("________________________________________________________")
                    dice_roller_challenge()
                else:
                    print("\nYour current overall score is", overall_score(),name)
                    print("\nReturning to main menu...\n")
                    main_menu()
               
            print(f"Current score: {sum(rolls)}\n")
            
        drscore.append(cur_drscore_add() + sum(rolls))
        if sum(rolls) >= target_score:
            print(f"Congrats! You reached {cur_drscore_track()} points in {rounds} rounds!")
        # Display stats
        print("\n--- Game Statistics ---")
        print(f"Total rounds played: {rounds}")
        print(f"Scores each round: {rolls}")
        print(f"Total score: {cur_drscore_track()}")
        print(f"Average per roll: {sum(rolls)/len(rolls):.2f}")
        print(f"Highest roll in a round: {max(rolls)}")
        print(f"Lowest roll in a round: {min(rolls)}")
        
        choice = str(input("\nWould you like to continue playing this game or return to the main menu?\nType 'y' to continue or press Enter to return:")).lower()
        if (choice == 'y'):
            print("________________________________________________________")
            dice_roller_challenge()
        else:
            print("\nYour current overall score is", overall_score(),name)
            print("\nReturning to main menu...\n")
            main_menu()
            
    except:
        print("________________________________________________________")
        print("Something went wrong.Please try again")
        print("________________________________________________________")
        dice_roller_challenge()
        

def pygame():
    # Set up some constants
    WIDTH, HEIGHT = 800, 600
    PADDLE_WIDTH, PADDLE_HEIGHT = 100, 20
    BALL_SIZE = 20
    BRICK_WIDTH, BRICK_HEIGHT = 80, 30
    FRUIT_SIZE = 20

    # Set up some colors
    WHITE = (255, 255, 255)
    RED = (255, 0, 0)
    GREEN = (0, 255, 0)
    BLUE = (0, 0, 255)

    # Set up the display
    SCREEN = pygame.display.set_mode((WIDTH, HEIGHT))

    # Set up the fonts
    FONT = pygame.font.Font(None, 36)

    # Set up the paddle
    PADDLE = pygame.Rect(WIDTH / 2 - PADDLE_WIDTH / 2, HEIGHT - PADDLE_HEIGHT - 20, PADDLE_WIDTH, PADDLE_HEIGHT)

    # Set up the ball
    BALL = pygame.Rect(WIDTH / 2 - BALL_SIZE / 2, HEIGHT / 2 - BALL_SIZE / 2, BALL_SIZE, BALL_SIZE)
    BALL_SPEED_X = 5
    BALL_SPEED_Y = -5

    # Set up the bricks
    BRICKS = []
    for i in range(5):
        for j in range(10):
            BRICKS.append(pygame.Rect(j * (BRICK_WIDTH + 5), i * (BRICK_HEIGHT + 5), BRICK_WIDTH, BRICK_HEIGHT))

    # Set up the fruits
    FRUITS = ['apple', 'banana', 'cherry']
    FRUIT_REWARDS = []

    # Set up the score
    pyscore.append(cur_pyscore_add() + 0)
    SCORE = 0
    # Game loop
    while True:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()

        # Move the paddle
        keys = pygame.key.get_pressed()
        if keys[pygame.K_LEFT] and PADDLE.x > 0:
            PADDLE.x -= 5
        if keys[pygame.K_RIGHT] and PADDLE.x < WIDTH - PADDLE_WIDTH:
            PADDLE.x += 5

        # Move the ball
        BALL.x += BALL_SPEED_X
        BALL.y += BALL_SPEED_Y

        # Collision with walls
        if BALL.x < 0 or BALL.x > WIDTH - BALL_SIZE:
            BALL_SPEED_X *= -1
        if BALL.y < 0:
            BALL_SPEED_Y *= -1

        # Collision with paddle
        if BALL.colliderect(PADDLE):
            BALL_SPEED_Y *= -1

        # Collision with bricks
        for brick in BRICKS[:]:
            if BALL.colliderect(brick):
                BRICKS.remove(brick)
                BALL_SPEED_Y *= -1
                FRUIT_REWARDS.append(random.choice(FRUITS))
                SCORE += 1

        # Draw everything
        SCREEN.fill((0, 0, 0))
        pygame.draw.rect(SCREEN, WHITE, PADDLE)
        pygame.draw.rect(SCREEN, WHITE, BALL)
        for brick in BRICKS:
            pygame.draw.rect(SCREEN, GREEN, brick)
        for i, fruit in enumerate(FRUIT_REWARDS):
            if fruit == 'apple':
                pygame.draw.circle(SCREEN, RED, (10 + i * FRUIT_SIZE, 10), FRUIT_SIZE)
            elif fruit == 'banana':
                pygame.draw.rect(SCREEN, (255, 255, 0), (10 + i * FRUIT_SIZE, 10, FRUIT_SIZE, FRUIT_SIZE))
            elif fruit == 'cherry':
                pygame.draw.circle(SCREEN, (139, 0, 0), (10 + i * FRUIT_SIZE, 10), FRUIT_SIZE)

        # Update the display
        pygame.display.flip()

        # Cap the frame rate
        pygame.time.delay(1000 // 60)

        # Check for game over
        if BALL.y > HEIGHT:
            break

    # Show the final score
    SCREEN.fill((0, 0, 0))
    text = FONT.render(f"Final score: {SCORE} points", True, WHITE)
    pyscore.append(cur_pyscore_add() + SCORE)
    SCREEN.blit(text, (WIDTH / 2 - text.get_width() / 2, HEIGHT / 2 - text.get_height() / 2))
    pygame.display.flip()
    pygame.time.delay(2000)
    choice = input("Play another round of pygame? Type 'yes' to replay or press Enter to return to main menu: ").lower()
    if (choice == 'y'):
        pygame()
    else:
        main_menu()
        
# Word_Scramble - Norman Ranger
def Word_Scramble():
    print("\nWelcome to Word Scramble!")
    print("Unscramble 5 words. You earn 5 point for each correct answer.\n")

    words = ['python', 'analytics', 'programming', 'database', 'variable', 'function', 'loop', 'boolean', 'string', 'integer']
    selected_words = random.sample(words, 5)
    round_score = 0
    try:
        for i, word in enumerate(selected_words, start=1):
            scrambled = ''.join(random.sample(word, len(word)))
            print(f"Word {i}: {scrambled}")
            guess = input("Your guess: ").lower()

            if guess == word:
                print("✅ Correct!\n")
                round_score += 5
            else:
                print(f"❌ Wrong! The correct word was: {word}\n")

        wsscore.append(cur_wsscore_add() + round_score)

        print("🎉 You finished the Word Scramble round!")
        print(f"You got {round_score} out of 25 correct.")
        print("Your current overall score is:", overall_score())
        print("________________________________________________________")

        choice = input("Play another Word Scramble round? Type 'yes' to replay or press Enter to return to main menu: ").lower()
        if (choice == 'y'):
            Word_Scramble()
        else:
            main_menu()
    except:
        print("________________________________________________________")
        print("Something went wrong.Please try again")
        print("________________________________________________________")
        Word_Scramble()
        
        
   



    

#Call to function that prompts user to enter their name


#Main menu function which prompts the user to choose between different games
def main_menu():
    
    print("\nPlease select a game from the list of options below: ")
    print("Game 1 - type 'A' to play Number Guess")
    print("Game 2 - type 'B' to play Dice Roller Challenge")
    print("Game 3 - type 'C' to play pygame")
    print("Game 4 - type 'D' to play Word Scramble")
    print("Exit - X")
    print("________________________________________________________")
    try:
        option = str(input("Please type one of the letters to decide which game you want to play: ")).upper()
        
        if option != 'X':
            
            match option:
                case 'A':
                    Number_Guess()
                case 'B':
                    dice_roller_challenge()
                case 'C':
                    pygame()
                case 'D':
                    Word_Scramble()
        else:
            print("Your average score for the games played is", avg_score())
            print("\nThank you for playing our games and we hope you decide to play again in the future.")
        
    except RuntimeError:
        print("\nAn error has occurred, you will be redirected to the main menu to try again")
        main_menu()
    except ValueError:
        print("You have entered an invalid option, you will be redirected to the main menu to try again")
        main_menu()
    except:
        print("\n An unexpected error has occurred, you will be redirected to the main menu to try again")
        main_menu()
